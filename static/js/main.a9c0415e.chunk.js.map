{"version":3,"sources":["components/deckgl-layers.js","components/style.js","components/controls.js","components/notification.js","components/firebase.js","components/counter.jsx","components/navbar.js","components/list-group.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["ambientLight","AmbientLight","color","intensity","pointLight","PointLight","position","DEFAULT_THEME","buildingColor","trailColor0","trailColor1","material","ambient","diffuse","shininess","specularColor","effects","LightingEffect","landCover","ICON_MAPPING","marker","x","y","width","height","anchorY","renderLayers","props","data","visiting","markers","path","trip","time","trailLength","onHover","onClick","settings","buildings","theme","showScatterplot","ScatterplotLayer","id","getPosition","d","getFillColor","getRadius","pickable","radiusMinPixels","radiusMaxPixels","PolygonLayer","getPolygon","f","stroked","extruded","wireframe","opacity","polygon","getElevation","PathLayer","widthMinPixels","getPath","getColor","getWidth","TripsLayer","getTimestamps","timestamps","rounded","currentTime","shadowEnabled","IconLayer","iconAtlas","iconMapping","getIcon","sizeScale","getSize","sizeMinPixels","tooltipStyle","padding","background","maxWidth","fontSize","zIndex","pointerEvents","layerControl","borderRadius","boxShadow","fontFamily","lineHeight","top","right","countercss","fontWeight","bottom","left","counterText","SCATTERPLOT_CONTROLS","type","value","radiusScale","step","min","max","MAPBOX_DEFAULT_MAPSTYLES","label","MapStylePicker","currentStyle","onStyleChange","Form","Control","as","size","className","onChange","e","target","map","style","key","LayerControls","settingName","newValue","this","newSettings","title","propTypes","Object","keys","display","float","propType","_onValueChange","bind","Component","Setting","Checkbox","Check","checked","Slider","htmlFor","Number","Notification","show","fade","icon","iconClassName","message","description","text","URL","window","open","location","replace","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Counter","counter","navbar","state","algorithm","collapse","setState","db","firestore","increment","FieldValue","collection","doc","update","get","then","snapshot","docs","forEach","readCounter","start","end","resetInterval","bfs","incrementCounter","dfs","dks","gbf","astar","console","log","fixed","dark","expand","transparent","marginleft","marginRight","isWideEnough","isOpen","options","locations","handleStart","placeholder","handleEnd","algoInfo","handleAlgo","Button","variant","setInitialView","ListGroup","pill","nodesVisited","runTime","pathLength","distance","speed","ReactGA","initialize","pageview","pathname","search","MAPBOX_TOKEN","process","REACT_APP_MapboxAccessToken","App","processData","graph","require","nodesToDisplay","i","push","lon","lat","pathToDisplay","tripToDisplay","startMarker","endMarker","cost","clearInterval","interval","current","adjNodes","timer","Date","now","currentFrontier","nextFrontier","Map","nodes","length","pop","adj","animateNodes","next","has","set","stack","frontier","filter","includes","nodesVisted","dijkstra","FlatQueue","cost_so_far","pathCounter","Array","from","new_cost","w","manhattan","a","b","Math","abs","euclidian","lat1","PI","lat2","radtheta","sin","cos","priority","recustructPath","backwards","timestamp","timestampCounter","distanceNodes","parseInt","reverse","haversine","reduce","toFixed","animatePath","radians","degrees","Δφ","Δλ","atan2","sqrt","viewport","longitude","latitude","zoom","pitch","bearing","hover","hoveredObject","click","clickedOject","accu","_animationFrame","cancelAnimationFrame","loopLength","animationSpeed","loopTime","requestAnimationFrame","setInterval","concat","slice","shift","object","node","_updateLayerSettings","ref","transform","layers","_onHover","_onClick","initialViewState","controller","ContextProvider","MapContext","Provider","reuseMaps","mapStyle","mapboxApiAccessToken","_uiVersion","Boolean","hostname","match","config","scrollTo","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9c0415e.chunk.js","sourcesContent":["import { ScatterplotLayer } from \"deck.gl\";\nimport { TripsLayer } from \"@deck.gl/geo-layers\";\nimport { PolygonLayer, IconLayer, PathLayer } from \"@deck.gl/layers\";\nimport { AmbientLight, PointLight, LightingEffect } from \"@deck.gl/core\";\n\nconst URL =\n  \"https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/trips/buildings.json\";\n//const trips =\"https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/trips/trips-v7.json\";\n\nconst ambientLight = new AmbientLight({\n  color: [255, 255, 255],\n  intensity: 1.0\n});\n\nconst pointLight = new PointLight({\n  color: [255, 255, 255],\n  intensity: 2.0,\n  position: [-74.05, 40.7, 8000]\n});\n\nconst lightingEffect = new LightingEffect({ ambientLight, pointLight });\n\nconst material = {\n  ambient: 0.1,\n  diffuse: 0.6,\n  shininess: 32,\n  specularColor: [60, 64, 70]\n};\n\nconst DEFAULT_THEME = {\n  buildingColor: [74, 80, 87],\n  trailColor0: [253, 128, 93],\n  trailColor1: [23, 184, 190],\n  material,\n  effects: [lightingEffect]\n};\nconst landCover = [\n  [\n    [-74.0, 40.7],\n    [-74.02, 40.7],\n    [-74.02, 40.72],\n    [-74.0, 40.72]\n  ]\n];\nconst ICON_MAPPING = {\n  marker: { x: 0, y: 0, width: 64, height: 64, anchorY: 64 }\n};\n\nexport function renderLayers(props) {\n  //Distructuring arguments\n  const {\n    data,\n    visiting,\n    markers,\n    path,\n    trip,\n    time,\n    trailLength,\n    onHover,\n    onClick,\n    settings,\n    buildings = URL,\n    theme = DEFAULT_THEME\n  } = props;\n\n  return [\n    settings.showScatterplot &&\n      new ScatterplotLayer({\n        id: \"scatterplot\",\n        //Format array [x,y,z]\n        getPosition: d => [d[1], d[2]],\n        getFillColor: [0, 128, 255],\n        getRadius: 8.5,\n        //opacity: 1, //Put 0 for invisable\n        pickable: true,\n        radiusMinPixels: 0.25,\n        radiusMaxPixels: 10,\n        data,\n        time,\n        onHover,\n        onClick,\n        ...settings\n      }),\n\n    settings.showScatterplot &&\n      new ScatterplotLayer({\n        id: \"scatterplotVisiting\",\n        getPosition: d => [d[1], d[2]],\n        getFillColor: [253, 128, 93],\n        getRadius: 9,\n        //opacity: 1, //Put 0 for invisable\n        radiusMinPixels: 0.25,\n        radiusMaxPixels: 10,\n        data: visiting,\n        ...settings\n      }),\n\n    new PolygonLayer({\n      id: \"ground\",\n      data: landCover,\n      getPolygon: f => f,\n      stroked: false,\n      getFillColor: [0, 0, 0, 0]\n    }),\n\n    new PolygonLayer({\n      id: \"buildings\",\n      data: buildings,\n      extruded: true,\n      wireframe: false,\n      opacity: 0.5,\n      getPolygon: f => f.polygon,\n      getElevation: f => f.height,\n      getFillColor: theme.buildingColor,\n      material: theme.material\n    }),\n    new PathLayer({\n      id: \"path-layer\",\n      data: path,\n      pickable: true,\n      widthMinPixels: 1,\n      getPath: d => d.path,\n      getColor: d => [253, 128, 93],\n      getWidth: d => 2\n    }),\n\n    new TripsLayer({\n      id: \"trips\",\n      data: trip,\n      getPath: d => d.trip,\n      getTimestamps: d => d.timestamps,\n      getColor: [253, 128, 93],\n      opacity: 0.8,\n      widthMinPixels: 4,\n      rounded: true,\n      trailLength,\n      currentTime: time,\n\n      shadowEnabled: false\n    }),\n    new IconLayer({\n      id: \"icon-layer\",\n      data: markers,\n      pickable: true,\n      // iconAtlas and iconMapping are required\n      // getIcon: return a string\n      iconAtlas:\n        \"https://raw.githubusercontent.com/dinojs/pathfinding/master/src/data/pin.png\", //<div>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\"<div>\n      iconMapping: ICON_MAPPING,\n      getIcon: d => \"marker\",\n      sizeScale: 35,\n      getPosition: d => [d[0], d[1]],\n      getSize: d => 1,\n      sizeMinPixels: 6\n    })\n  ];\n}\n","export const tooltipStyle = {\n  position: \"absolute\",\n  padding: \"4px\",\n  background: \"rgba(0, 0, 0, 0.8)\",\n  color: \"#fff\",\n  maxWidth: \"300px\",\n  fontSize: \"10px\",\n  zIndex: 9,\n  pointerEvents: \"none\"\n};\n\nexport const layerControl = {\n  borderRadius: 3,\n  boxShadow: \"0 1px 2px rgba(0, 0, 0, 0.1)\",\n  fontFamily:\n    'ff-clan-web-pro, \"Helvetica Neue\", Helvetica, sans-serif !important',\n  fontSize: \"11px\",\n  lineHeight: 1.833,\n  width: 180,\n  position: \"absolute\",\n  top: \"115px\",\n  right: \"5px\",\n  padding: \"5px\",\n  zIndex: 100,\n  background: \"white\"\n};\nexport const countercss = {\n  color: \"#fff\",\n  opacity: 1,\n  fontWeight: 500,\n  fontSize: \"1rem\",\n  position: \"absolute\",\n  bottom: \"30px\",\n  left: \"45px\",\n  zIndex: 9998\n};\n\nexport const counterText = {\n  color: \"#F5F5F5\",\n  opacity: 1,\n  fontSize: \"0.6rem\",\n  position: \"absolute\",\n  bottom: \"24px\",\n  left: \"45px\",\n  zIndex: 9998\n};\n\nexport const select = {\n  width: 180\n};\n","import React, { Component } from \"react\";\nimport { layerControl } from \"./style\";\nimport { Form } from \"react-bootstrap\";\n\nexport const SCATTERPLOT_CONTROLS = {\n  showScatterplot: {\n    type: \"boolean\",\n    value: true\n  },\n  radiusScale: {\n    type: \"range\",\n    value: 0.6,\n    step: 2,\n    min: 10,\n    max: 10\n  }\n};\n\nconst MAPBOX_DEFAULT_MAPSTYLES = [\n  { label: \"Streets\", value: \"mapbox://styles/mapbox/streets-v10\" },\n  { label: \"Outdoors\", value: \"mapbox://styles/mapbox/outdoors-v10\" },\n  { label: \"Light\", value: \"mapbox://styles/mapbox/light-v10\" },\n  { label: \"Dark\", value: \"mapbox://styles/mapbox/dark-v10\" },\n  { label: \"Satellite\", value: \"mapbox://styles/mapbox/satellite-v9\" },\n  {\n    label: \"Navigation Preview Day V4\",\n    value: \"mapbox://styles/mapbox/navigation-preview-day-v4\"\n  },\n  {\n    label: \"Navitation Preview Night V4\",\n    value: \"mapbox://styles/mapbox/navigation-preview-night-v4\"\n  },\n  {\n    label: \"Navigation Guidance Day V4\",\n    value: \"mapbox://styles/mapbox/navigation-guidance-day-v4\"\n  },\n  {\n    label: \"Navigation Guidance Night V4\",\n    value: \"mapbox://styles/mapbox/navigation-guidance-night-v4\"\n  }\n];\n\nexport function MapStylePicker({ currentStyle, onStyleChange }) {\n  return (\n    <Form.Control\n      as=\"select\"\n      size=\"md\"\n      className=\"col-sm-2 sm\"\n      value={currentStyle}\n      onChange={e => onStyleChange(e.target.value)}\n    >\n      {MAPBOX_DEFAULT_MAPSTYLES.map(style => (\n        <option key={style.value} value={style.value}>\n          {style.label}\n        </option>\n      ))}\n    </Form.Control>\n  );\n}\n\nexport class LayerControls extends Component {\n  _onValueChange(settingName, newValue) {\n    const { settings } = this.props;\n    // Only update if we have a confirmed change\n    if (settings[settingName] !== newValue) {\n      // Create a new object so that shallow-equal detects a change\n      const newSettings = {\n        ...this.props.settings,\n        [settingName]: newValue\n      };\n\n      this.props.onChange(newSettings);\n    }\n  }\n\n  render() {\n    const { title, settings, propTypes = {} } = this.props;\n\n    return (\n      <div className=\"layer-controls\" style={layerControl}>\n        {title && <h4>{title}</h4>}\n        {Object.keys(settings).map(key => (\n          <div key={key}>\n            <div style={{ display: \"inline-block\", float: \"right\" }}>\n              {settings[key]}\n            </div>\n            <Setting\n              settingName={key}\n              value={settings[key]}\n              propType={propTypes[key]}\n              onChange={this._onValueChange.bind(this)}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst Setting = props => {\n  const { propType } = props;\n  if (propType && propType.type) {\n    switch (propType.type) {\n      case \"range\":\n        return <Slider {...props} />;\n\n      case \"boolean\":\n        return <Checkbox {...props} />;\n      default:\n        return <input {...props} />;\n    }\n  }\n};\n\nconst Checkbox = ({ settingName, value, onChange }) => {\n  return (\n    <Form>\n      <Form.Check\n        type=\"switch\"\n        id={settingName}\n        checked={value}\n        onChange={e => onChange(settingName, e.target.checked)}\n        label=\"Show Scatterplot\"\n      />\n    </Form>\n  );\n};\n\nconst Slider = ({ settingName, value, propType, onChange }) => {\n  const { max = 100 } = propType;\n\n  return (\n    <div className=\"Slider\">\n      <label htmlFor=\"customRange1\">Scatterplot Radius</label>\n      <input\n        type=\"range\"\n        className=\"custom-range\"\n        id=\"customRange1\"\n        min={0}\n        max={max}\n        step={max / 100}\n        value={value}\n        onChange={e => onChange(settingName, Number(e.target.value))}\n      />\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { MDBNotification } from \"mdbreact\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nexport class Notification extends Component {\n  render() {\n    return (\n      <MDBNotification\n        //autohide={5000}\n        show\n        fade\n        icon=\"location-arrow\"\n        iconClassName=\"text-primary\"\n        title={this.props.label}\n        message={this.props.description}\n        text=\"Click to learn more\"\n        onClick={() => {\n          if (this.props.URL) {\n            window.open(this.props.URL, \"_blank\") ||\n              window.location.replace(this.props.URL);\n          }\n        }}\n        style={{\n          position: \"fixed\",\n          fontSize: \"12.5px\",\n          width: \"30rem\",\n          bottom: \"10px\",\n          right: \"10px\",\n          zIndex: 9999\n        }}\n      />\n    );\n  }\n}\n","import firebase from \"firebase\";\nimport \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"API\",\n  authDomain: \"pathfinding-1.firebaseapp.com\",\n  databaseURL: \"https://pathfinding-1.firebaseio.com\",\n  projectId: \"pathfinding-1\",\n  storageBucket: \"pathfinding-1.appspot.com\",\n  messagingSenderId: \"134386886799\",\n  appId: \"1:134386886799:web:2be79cafe87129a0b7e8fa\",\n  measurementId: \"G-DYK0K7JL1X\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default firebase;\n","import React from \"react\";\nimport { countercss, counterText } from \"./style.js\";\nconst Counter = props => {\n  return (\n    <div>\n      <div style={countercss}>{props.counter} paths found</div>\n      <div style={counterText}>with path-finding.com</div>\n    </div>\n  );\n};\n\nexport default Counter;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from \"react-bootstrap\";\nimport { MapStylePicker } from \"./controls\";\nimport { Notification } from \"./notification\";\nimport Select from \"react-select\";\nimport firebase from \"./firebase\";\nimport Counter from \"./counter.jsx\";\nimport locations from \"../data/locations.json\"; //Dropdown data\nimport algoInfo from \"../data/algoInfo.json\"; //Algorithms description\n\nimport {\n  MDBNavbar,\n  MDBNavbarNav,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBContainer,\n} from \"mdbreact\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nclass navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      algorithm: \"Algorithm\",\n      label: \"How does it work?\",\n      description:\n        \"Select a STARTING/DESTINATION point by clicking on the nodes ⮕ Select an ALGORITHM ⮕ Click START. Keep me open if you want to learn more about algorithms while using the site\",\n      collapse: false,\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n  onClick() {\n    this.setState({\n      collapse: !this.state.collapse,\n    });\n  }\n\n  handleAlgo(e) {\n    this.setState({\n      algorithm: e.value,\n      label: e.label,\n      description: e.description,\n      URL: e.URL,\n    });\n  }\n\n  incrementCounter() {\n    //Increment counter\n    const db = firebase.firestore();\n    const increment = firebase.firestore.FieldValue.increment(1);\n\n    const counterRef = db.collection(\"counter\").doc(\"paths\");\n    counterRef.update({ counter: increment });\n  }\n\n  readCounter() {\n    //Read counter on load time\n    const db = firebase.firestore();\n    let counter;\n    db.collection(\"counter\")\n      .get()\n      .then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n          counter = doc.data().counter;\n        });\n        this.setState({ counter });\n      });\n  }\n  componentDidMount() {\n    this.readCounter();\n  }\n\n  handleStart() {\n    if (\n      typeof this.props.start === \"number\" && //start & end must be selected\n      typeof this.props.end === \"number\"\n    ) {\n      this.props.resetInterval(); //Avoid animation collision\n      switch (this.state.algorithm) {\n        case \"bfs\":\n          this.props.bfs();\n          this.incrementCounter(); //Total paths found all time\n          break;\n        case \"dfs\":\n          this.props.dfs();\n          this.incrementCounter();\n          break;\n        case \"dks\":\n          this.props.dks();\n          this.incrementCounter();\n          break;\n        case \"gbf\":\n          this.props.gbf();\n          this.incrementCounter();\n          break;\n        case \"astar\":\n          this.props.astar();\n          this.incrementCounter();\n          break;\n        default:\n          console.log(\"No algorithm selected!\");\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <Router>\n            <MDBNavbar\n              color=\"bg-primary\"\n              fixed=\"top\"\n              dark\n              expand=\"md\"\n              transparent\n              style={{ marginleft: \"200px\", marginRight: \"200px\" }} //Avoid list-group collision\n            >\n              <MDBContainer>\n                {!this.state.isWideEnough && (\n                  <MDBNavbarToggler onClick={this.onClick} />\n                )}\n                <MDBCollapse isOpen={this.state.collapse} navbar>\n                  <MDBNavbarNav\n                  // style={{ marginleft: \"200px\", marginRight: \"200px\" }}\n                  >\n                    <Select\n                      options={locations}\n                      value={this.props.start}\n                      className=\"col-sm-3\"\n                      onChange={(e) => this.props.handleStart(Number(e.value))}\n                      placeholder={this.props.start}\n                    />\n\n                    <Select\n                      options={locations}\n                      value={this.props.end}\n                      className=\"col-sm-3\"\n                      onChange={(e) => this.props.handleEnd(Number(e.value))}\n                      placeholder={this.props.end}\n                    />\n\n                    <Select\n                      options={algoInfo}\n                      className=\"col-sm-3\"\n                      onChange={(e) => this.handleAlgo(e)}\n                      placeholder={this.state.algorithm}\n                    />\n                    <Button\n                      size=\"sm\"\n                      onClick={() => this.handleStart()} //()=> so that it doesn't get called as soon as mounted\n                      variant=\"primary\"\n                      className=\"mr-sm-2 font-weight-bold\"\n                    >\n                      START\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      onClick={() => this.props.setInitialView()}\n                      variant=\"danger\"\n                      className=\"mr-sm-2\"\n                    >\n                      CLEAR\n                    </Button>\n                    <MapStylePicker\n                      onStyleChange={this.props.onStyleChange}\n                      currentStyle={this.props.style}\n                    />\n                  </MDBNavbarNav>\n                </MDBCollapse>\n              </MDBContainer>\n            </MDBNavbar>\n          </Router>\n        </header>\n\n        <Notification\n          algorithm={this.state.algorithm}\n          label={this.state.label}\n          description={this.state.description}\n          URL={this.state.URL}\n        />\n        <Counter counter={this.state.counter} />\n      </div>\n    );\n  }\n}\n\nexport default navbar;\n","import React, { Component } from \"react\";\nimport {\n  MDBListGroup,\n  MDBListGroupItem,\n  MDBContainer,\n  MDBBadge\n} from \"mdbreact\";\n\nexport class ListGroup extends Component {\n  render() {\n    return (\n      <MDBContainer>\n        <MDBListGroup\n          style={{\n            width: 180,\n            fontSize: \"12px\",\n            position: \"absolute\",\n            top: \"5px\",\n            right: \"5px\",\n            lineHeight: 0.5\n          }}\n        >\n          <MDBListGroupItem\n            className=\"d-flex justify-content-between align-items-center p-1\"\n            color=\"secondary\"\n          >\n            Live nodes count:\n            <span> {this.props.data}</span>\n          </MDBListGroupItem>\n          <MDBListGroupItem className=\"d-flex   justify-content-between  align-items-center p-1 \">\n            Visited{\" \"}\n            <MDBBadge color=\"primary\" pill>\n              {this.props.nodesVisited}\n            </MDBBadge>{\" \"}\n            nodes in <MDBBadge color=\"danger\">{this.props.runTime}ms</MDBBadge>\n          </MDBListGroupItem>\n          <MDBListGroupItem className=\"d-flex justify-content-between align-items-center p-1\">\n            Path length:\n            <MDBBadge color=\"primary\" pill>\n              {this.props.pathLength}\n            </MDBBadge>\n          </MDBListGroupItem>\n          <MDBListGroupItem className=\"d-flex justify-content-between align-items-center p-1\">\n            Distance:\n            <MDBBadge color=\"primary\" pill>\n              {this.props.distance} Km\n            </MDBBadge>\n          </MDBListGroupItem>\n          <MDBListGroupItem className=\"d-flex justify-content-between align-items-center p-1\">\n            Average speed:\n            <MDBBadge color=\"primary\" pill>\n              {this.props.speed} Km/h\n            </MDBBadge>\n          </MDBListGroupItem>\n        </MDBListGroup>\n      </MDBContainer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  _MapContext as MapContext,\n  NavigationControl,\n  StaticMap,\n} from \"react-map-gl\";\nimport DeckGL, { CPUGridLayer } from \"deck.gl\";\nimport { renderLayers } from \"./components/deckgl-layers\";\nimport Navbar from \"./components/navbar\";\nimport { ListGroup } from \"./components/list-group\";\nimport { LayerControls, SCATTERPLOT_CONTROLS } from \"./components/controls\";\nimport { tooltipStyle } from \"./components/style\";\nimport FlatQueue from \"flatqueue\";\nimport ReactGA from \"react-ga\"; //Website traffic info\nReactGA.initialize(\"UA-160781302-1\");\nReactGA.pageview(window.location.pathname + window.location.search);\nconst MAPBOX_TOKEN = process.env.REACT_APP_MapboxAccessToken; // eslint-disable-line\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewport: {\n        longitude: -74,\n        latitude: 40.711,\n        zoom: 13.9,\n        pitch: 55,\n        bearing: 45,\n      },\n      hover: {\n        x: 0,\n        y: 0,\n        hoveredObject: null,\n      },\n      graph: null,\n      timestampCounter: null,\n      pathLength: 0,\n      trailLength: 200, //Can't be null\n      click: { clickedOject: null },\n      nodesToDisplay: [],\n      nodesVisited: 0, //Frontier length\n      time: 0,\n      cost: 0,\n      settings: Object.keys(SCATTERPLOT_CONTROLS).reduce(\n        (accu, key) => ({\n          ...accu,\n          [key]: SCATTERPLOT_CONTROLS[key].value,\n        }),\n        {}\n      ),\n      style: \"mapbox://styles/mapbox/dark-v10\",\n    };\n  }\n\n  componentDidMount() {\n    this.processData();\n  }\n\n  componentWillUnmount() {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n    }\n  }\n  animatePath() {\n    const {\n      loopLength = this.state.timestampCounter, // unit corresponds to the timestamp in source data\n      animationSpeed = loopLength / 2, // unit time per second\n      trailLength = loopLength,\n    } = this.props;\n    this.setState({ trailLength });\n    const timestamp = Date.now() / 1000;\n    const loopTime = loopLength / animationSpeed;\n\n    this.setState({\n      time: ((timestamp % loopTime) / loopTime) * loopLength,\n    });\n    this._animationFrame = window.requestAnimationFrame(\n      this.animatePath.bind(this)\n    );\n  }\n\n  processData = () => {\n    const data = require(\"./data/nodes.json\");\n    const graph = data[0];\n    this.setState(\n      { graph },\n      this.setInitialView //Works as await function\n    );\n  };\n\n  setInitialView = () => {\n    let nodesToDisplay = [];\n    const graph = this.state.graph;\n\n    for (let i in graph) {\n      nodesToDisplay.push([i, graph[i].lon, graph[i].lat]);\n    }\n    this.setState({\n      nodesToDisplay,\n      pathToDisplay: null, //Reset path\n      tripToDisplay: null, //Reset trip animation\n      visiting: null, //Reset Frontier\n      startMarker: [],\n      endMarker: [],\n      start: \"Start\", //So that they show as placeholder\n      end: \"Destination\",\n      cost: 0,\n      speed: 0,\n    });\n    this.resetInterval();\n  };\n\n  resetInterval = () => {\n    clearInterval(this.state.interval); //Stop animation\n  };\n  //////////////////////////////////\n  bfs = () => {\n    const graph = this.state.graph;\n    const timer = Date.now();\n    let currentFrontier = [this.state.start];\n    let nextFrontier = [];\n\n    let path = new Map();\n    //To reconstruct the path\n    let current, adjNodes;\n    let nodes = [];\n\n    while (currentFrontier.length > 0 || nextFrontier.length > 0) {\n      if (currentFrontier.length === 0) {\n        //Swap\n        [currentFrontier, nextFrontier] = [nextFrontier, currentFrontier];\n      }\n\n      current = currentFrontier.pop();\n      adjNodes = graph[current].adj;\n\n      nodes.push([current, graph[current].lon, graph[current].lat]);\n\n      if (current === this.state.end) {\n        let runTime = Date.now() - timer;\n        this.setState({ nodesVisited: nodes.length, runTime });\n        this.animateNodes(nodes, path);\n\n        break;\n      }\n\n      for (let next of adjNodes) {\n        if (!path.has(next)) {\n          nextFrontier.push(next);\n          path.set(next, current);\n        }\n      }\n    }\n    if (!currentFrontier.length && !nextFrontier.length) {\n      this.animateNodes(nodes);\n\n      console.log(\n        `Path not found, ${current} possible dead end or all the adjacent nodes have already been visited`\n      );\n    }\n  };\n\n  dfs = () => {\n    const graph = this.state.graph;\n    const timer = Date.now();\n    let stack = [this.state.start];\n    let frontier = [];\n    let path = new Map();\n    let current;\n    let nodes = [];\n    while (stack.length) {\n      current = stack.pop();\n      frontier.push(current);\n\n      //Display node\n      nodes.push([current, graph[current].lon, graph[current].lat]);\n\n      if (current === this.state.end) {\n        let runTime = Date.now() - timer;\n        this.setState({ nodesVisited: nodes.length, runTime });\n        this.animateNodes(nodes, path);\n        console.log(`${nodes.length} nodes visted in ${Date.now() - timer} ms`);\n        break;\n      }\n\n      graph[current].adj\n        .filter((next) => !frontier.includes(next))\n        .forEach((next) => {\n          stack.push(next);\n          path.set(next, current);\n        });\n    }\n    if (!stack.length) {\n      this.animateNodes(nodes);\n      let runTime = Date.now() - timer;\n      this.setState({ nodesVisted: nodes.length, runTime });\n      console.log(\n        `Path not found, ${current} possible dead end or all the adjacent nodes have already been visited`\n      );\n    }\n  };\n\n  dijkstra = () => {\n    const graph = this.state.graph;\n    const timer = Date.now();\n    const frontier = new FlatQueue();\n    frontier.push(this.state.start, 0);\n    let path = new Map();\n    let cost_so_far = new Map();\n    cost_so_far.set(this.state.start, 0);\n\n    let current, adjNodes;\n    let nodes = [];\n    let pathCounter = 0;\n    while (frontier.length > 0) {\n      current = frontier.pop(); //remove smallest item\n      adjNodes = graph[current].adj;\n\n      nodes.push([current, graph[current].lon, graph[current].lat]);\n\n      if (current === this.state.end) {\n        let runTime = Date.now() - timer;\n        let cost = Array.from(cost_so_far)[cost_so_far.size - 1][1];\n        this.setState({ cost, nodesVisited: nodes.length, runTime });\n\n        this.animateNodes(nodes, path);\n        console.log(\n          `%cAnalysed ${pathCounter} different paths, the best one costs ${cost}.`,\n          \"color: #fff; background-color:#b32400; border-radius: 5px; padding: 2px\"\n        );\n        break;\n      }\n\n      let i = 0;\n      for (let next of adjNodes) {\n        let new_cost = cost_so_far.get(current) + graph[current].w[i];\n\n        if (!cost_so_far.has(next) || new_cost < cost_so_far.get(next)) {\n          if (new_cost < cost_so_far.get(next)) pathCounter++;\n          cost_so_far.set(next, new_cost);\n          // let priority = new_cost;\n          frontier.push(next, new_cost);\n          path.set(next, current);\n        }\n        i++;\n      }\n    }\n    if (!frontier.length) {\n      this.animateNodes(nodes);\n      console.log(`${nodes.length} nodes visted in ${Date.now() - timer} ms`);\n      console.log(\n        `Path not found, ${current} possible dead end or all the adjacent nodes have already been visited`\n      );\n    }\n  };\n  manhattan = (a, b) => {\n    //Heuristic - Manhattan distance\n    const graph = this.state.graph;\n\n    return (\n      Math.abs(graph[a].lon - graph[b].lon) +\n      Math.abs(graph[a].lat - graph[b].lat)\n    );\n  };\n  euclidian = (a, b) => {\n    const graph = this.state.graph;\n    let lat1 = (Math.PI * graph[a].lat) / 180;\n    let lat2 = (Math.PI * graph[b].lat) / 180;\n    let radtheta = (Math.PI * (graph[a].lon - graph[b].lon)) / 180;\n    return (\n      Math.sin(lat1) * Math.sin(lat2) +\n      Math.cos(lat1) * Math.cos(lat2) * Math.cos(radtheta)\n    );\n  };\n  gbf = () => {\n    //Greedy Best First Search\n    const graph = this.state.graph;\n    const timer = Date.now();\n    const frontier = new FlatQueue();\n    frontier.push(this.state.start, 0);\n    let path = new Map();\n\n    let current, adjNodes, priority;\n    let nodes = [];\n\n    while (frontier.length > 0) {\n      current = frontier.pop(); //remove smallest item\n      adjNodes = graph[current].adj;\n\n      nodes.push([current, graph[current].lon, graph[current].lat]);\n\n      if (current === this.state.end) {\n        let runTime = Date.now() - timer;\n        this.setState({ nodesVisited: nodes.length, runTime });\n        this.animateNodes(nodes, path);\n        break;\n      }\n\n      for (let next of adjNodes) {\n        if (!path.has(next)) {\n          priority = this.manhattan(this.state.end, next); //Destination, currrent node\n          frontier.push(next, priority);\n          path.set(next, current);\n        }\n      }\n    }\n    if (!frontier.length) {\n      this.animateNodes(nodes);\n      console.log(`${nodes.length} nodes visted in ${Date.now() - timer} ms`);\n      console.log(\n        `Path not found, ${current} possible dead end or all the adjacent nodes have already been visited`\n      );\n    }\n  };\n\n  astar = () => {\n    const graph = this.state.graph;\n    const timer = Date.now();\n    const frontier = new FlatQueue();\n    frontier.push(this.state.start, 0);\n    let path = new Map();\n    let cost_so_far = new Map();\n    cost_so_far.set(this.state.start, 0);\n\n    let current, adjNodes, priority;\n    let nodes = [];\n    let pathCounter = 0;\n    while (frontier.length > 0) {\n      current = frontier.pop(); //remove smallest item\n      adjNodes = graph[current].adj;\n\n      nodes.push([current, graph[current].lon, graph[current].lat]);\n\n      if (current === this.state.end) {\n        let runTime = Date.now() - timer;\n\n        let cost = Array.from(cost_so_far)[cost_so_far.size - 1][1];\n        this.setState({ cost, nodesVisited: nodes.length, runTime });\n        console.log(\n          `%cAnalysed ${pathCounter} different paths, the best one costs ${cost}.`,\n          \"color: #fff; background-color:#b32400; border-radius: 5px; padding: 2px\"\n        );\n        this.animateNodes(nodes, path);\n\n        break;\n      }\n\n      let i = 0;\n      for (let next of adjNodes) {\n        let new_cost = cost_so_far.get(current) + graph[current].w[i];\n\n        if (!cost_so_far.has(next) || new_cost < cost_so_far.get(next)) {\n          if (new_cost < cost_so_far.get(next)) pathCounter++; //How many different paths analysed\n\n          cost_so_far.set(next, new_cost);\n          priority = new_cost + this.manhattan(this.state.end, next) * 100000;\n          frontier.push(next, priority);\n          path.set(next, current);\n        }\n        i++;\n      }\n    }\n    if (!frontier.length) {\n      this.animateNodes(nodes);\n      console.log(`${nodes.length} nodes visted in ${Date.now() - timer} ms`);\n      console.log(\n        `Path not found, ${current} possible dead end or all the adjacent nodes have already been visited`\n      );\n    }\n  };\n  recustructPath = (path) => {\n    let graph = this.state.graph;\n    let current = this.state.end;\n    let backwards = [];\n    let nodes = [];\n    let trip = [];\n    let timestamp = [];\n    let timestampCounter = 1;\n    let distanceNodes = [];\n\n    while (current !== this.state.start) {\n      backwards.push(current);\n      current = parseInt(path.get(current));\n    }\n    backwards.push(this.state.start);\n    backwards.reverse();\n\n    for (let i of backwards) {\n      timestampCounter++;\n      nodes.push([graph[i].lon, graph[i].lat]); //PathLayer\n      trip.push([graph[i].lon, graph[i].lat, 10]); //x, y, z (path elevation) //TripsLayer\n      timestamp.push(timestampCounter);\n    }\n    this.setState({ timestampCounter });\n    const pathToDisplay = [{ path: nodes }];\n    const tripToDisplay = [\n      {\n        trip,\n        timestamps: timestamp,\n      },\n    ];\n    this.setState({\n      pathToDisplay,\n      tripToDisplay,\n    });\n    //Calculate total path distance\n    for (let i = 0; i < backwards.length - 1; i++) {\n      distanceNodes.push(\n        Number(this.haversine(backwards[i], backwards[i + 1]))\n      );\n    }\n    let distance = distanceNodes.reduce((a, b) => a + b, 0).toFixed(2);\n    let speed = (this.state.cost / backwards.length).toFixed(2);\n\n    this.setState({ distance, pathLength: backwards.length, speed });\n    this.animatePath();\n  };\n\n  haversine = (a, b) => {\n    //https://www.movable-type.co.uk/scripts/latlong.html\n    Math.radians = function (degrees) {\n      return (degrees * Math.PI) / 180;\n    };\n\n    const graph = this.state.graph;\n    const R = 6371; // Radius of the earth in km\n    const lat1 = Math.radians(graph[a].lat);\n    const lat2 = Math.radians(graph[b].lat);\n    const Δφ = lat2 - lat1;\n    const Δλ = Math.radians(graph[b].lon - graph[a].lon);\n\n    let distance =\n      Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\n      Math.cos(lat1) * Math.cos(lat2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    let c = 2 * Math.atan2(Math.sqrt(distance), Math.sqrt(1 - distance));\n\n    return R * c; //Distance in km\n  };\n\n  animateNodes(nodes, path = null, i = 1) {\n    // let connected = []; //Retrive connected graph\n    // nodes.forEach(e => connected.push(String(e[0])));\n    // console.log(connected);\n    this.setState({\n      nodesToDisplay: nodes[0],\n    }); //Avoid page refresh\n\n    let visiting = []; //Array containing nodes that will be passed to scatterplot2\n    //Used to obtain a global refresh rate\n    let interval = setInterval(() => {\n      //At each iteration the state is updated\n      this.setState({\n        //Concatenates the existing array of nodes with the successor, array passed to scatterplot (blue)\n        nodesToDisplay: this.state.nodesToDisplay.concat([nodes[i]]),\n\n        //Array containing the last 25 nodes visited (orange), which appears on top of scatterplot (blue)\n        visiting: this.state.nodesToDisplay.slice(-25),\n      });\n\n      if ((visiting.length = 25)) {\n        //Makes sure scatterplot2 always has a size of 25\n        visiting.shift();\n      }\n      i++; //Increases by 1 at each iteration\n      //If the frontier has been fully visited, scatterplot will be the only one visible\n      if (i === nodes.length) {\n        clearInterval(this.state.interval);\n        this.setState({ visiting: null }); //Reset current visiting animation\n        if (nodes[nodes.length - 1][0] === this.state.end) {\n          //If end node found\n\n          this.recustructPath(path); //Set visited nodes sequence\n        }\n      }\n    }, 10);\n    this.setState({ interval });\n  }\n\n  ////////////////////////////////////////\n  _onHover({ x, y, object }) {\n    const label = `Node ${object}`;\n\n    this.setState({ hover: { x, y, hoveredObject: object, label } });\n  }\n  _onClick({ object }) {\n    let node = parseInt(object[0]);\n    let marker = [];\n    if (this.state.start && this.state.end) {\n      //If both are alredy selected\n      this.setState({\n        start: null,\n        end: null,\n        startMarker: [],\n        endMarker: [],\n      });\n    }\n\n    marker.push(this.state.graph[node].lon, this.state.graph[node].lat);\n\n    this.state.start\n      ? this.setState({ end: node, endMarker: marker })\n      : this.setState({ start: node, startMarker: marker });\n\n    //Start and End can't be the same\n\n    if (this.state.start === this.state.end) {\n      this.setState({\n        start: null,\n        end: null,\n        startMarker: [],\n        endMarker: [],\n      });\n    }\n  }\n\n  handleStart = (e) => {\n    let startMarker = [];\n    if (this.state.end !== e) {\n      this.setState({ start: e, startMarker: [] });\n      startMarker.push(this.state.graph[e].lon, this.state.graph[e].lat);\n      this.setState({ startMarker });\n    }\n  };\n\n  handleEnd = (e) => {\n    let endMarker = [];\n    if (this.state.start !== e) {\n      this.setState({ end: e, endMarker: [] });\n      endMarker.push(this.state.graph[e].lon, this.state.graph[e].lat);\n      this.setState({ endMarker });\n    }\n  };\n\n  onStyleChange = (style) => {\n    this.setState({ style });\n  };\n\n  _updateLayerSettings(settings) {\n    this.setState({ settings });\n  }\n  render() {\n    const data = this.state.nodesToDisplay;\n    const path = this.state.pathToDisplay;\n    const { viewport } = this.state;\n    if (data.length === 0) {\n      return null;\n    }\n    const { hover } = this.state;\n\n    return (\n      <div>\n        <LayerControls\n          settings={this.state.settings}\n          propTypes={SCATTERPLOT_CONTROLS}\n          onChange={(settings) => this._updateLayerSettings(settings)}\n        />\n        <Navbar\n          ref=\"child\"\n          bfs={this.bfs}\n          dfs={this.dfs}\n          dks={this.dijkstra}\n          gbf={this.gbf}\n          astar={this.astar}\n          setInitialView={this.setInitialView}\n          onStyleChange={this.onStyleChange}\n          style={this.state.style}\n          start={this.state.start}\n          end={this.state.end}\n          handleStart={this.handleStart.bind(this)}\n          handleEnd={this.handleEnd.bind(this)}\n          resetInterval={this.resetInterval}\n        />\n        {hover.hoveredObject && (\n          <div\n            style={{\n              ...tooltipStyle,\n              transform: `translate(${hover.x}px, ${hover.y}px)`,\n            }}\n          >\n            <div>{hover.label}</div>\n          </div>\n        )}\n        <DeckGL\n          layers={renderLayers({\n            trailLength: this.state.trailLength,\n            visiting: this.state.visiting,\n            markers: [this.state.startMarker, this.state.endMarker],\n            data,\n            path,\n            trip: this.state.tripToDisplay,\n            time: this.state.time,\n            onHover: (hover) => this._onHover(hover),\n            onClick: (click) => this._onClick(click),\n            settings: this.state.settings,\n          })}\n          initialViewState={viewport}\n          controller //Allows the user to move the map around\n          ContextProvider={MapContext.Provider}\n        >\n          <StaticMap // minimum version of reat-map-g\n            reuseMaps\n            mapStyle={this.state.style}\n            mapboxApiAccessToken={MAPBOX_TOKEN}\n          />\n          <div className=\"mapboxgl-ctrl-bottom-left\">\n            <NavigationControl\n              ref={(ref) => {\n                if (ref != null) {\n                  ref._uiVersion = 2;\n                }\n              }} //https://github.com/uber/deck.gl/issues/4383\n              // onViewportChange={viewport => this.setState({ viewport })}\n            />\n          </div>\n        </DeckGL>\n        <ListGroup\n          ref=\"child\"\n          data={data.length}\n          pathLength={this.state.pathLength}\n          distance={this.state.distance}\n          cost={this.state.cost}\n          speed={this.state.speed}\n          nodesVisited={this.state.nodesVisited}\n          runTime={this.state.runTime}\n        />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  hover: {\n    x: 0,\n    y: 0,\n    hoveredObject: null\n  },\n  click: { clickedOject: null },\n  start: 5173488749,\n  end: 6330518860,\n  nodes: [],\n  path: new Map(),\n  frontier: [],\n  style: \"mapbox://styles/mapbox/dark-v10\"\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_NODES\":\n      let newNodes = state.node;\n      return {\n        ...state,\n        nodes: newNodes\n      };\n    case \"SET_FRONTIER\":\n      let newFrontier = state.frontier;\n      return {\n        ...state,\n        nodes: newFrontier\n      };\n    case \"SET_PATH\":\n      let newPath = state.path;\n      return {\n        ...state,\n        path: newPath\n      };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\"; //Component that will wrap the root component, passs Store to that provider so it can be used in the app\nimport rootReducer from \"./reducers/rootReducer\";\n\nrequire(\"dotenv\").config();\nwindow.scrollTo(0, 1);\n//const store = createStore(rootReducer);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}