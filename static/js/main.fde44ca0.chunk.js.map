{"version":3,"sources":["components/deckgl-layers.js","components/style.js","components/controls.js","components/notification.js","components/firebase.js","components/counter.jsx","components/navbar.js","components/list-group.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["ambientLight","AmbientLight","color","intensity","pointLight","PointLight","position","DEFAULT_THEME","buildingColor","trailColor0","trailColor1","material","ambient","diffuse","shininess","specularColor","effects","LightingEffect","landCover","renderLayers","props","data","visiting","startEnd","path","trip","time","trailLength","onHover","onClick","settings","buildings","theme","showScatterplot","ScatterplotLayer","id","getPosition","d","getFillColor","getRadius","opacity","pickable","radiusMinPixels","radiusMaxPixels","PolygonLayer","getPolygon","f","stroked","extruded","wireframe","polygon","getElevation","height","PathLayer","widthMinPixels","getPath","getColor","getWidth","TripsLayer","getTimestamps","timestamps","rounded","currentTime","shadowEnabled","tooltipStyle","padding","background","maxWidth","fontSize","zIndex","pointerEvents","layerControl","borderRadius","boxShadow","fontFamily","lineHeight","width","top","right","countercss","fontWeight","bottom","left","counterText","SCATTERPLOT_CONTROLS","type","value","radiusScale","step","min","max","MAPBOX_DEFAULT_MAPSTYLES","label","MapStylePicker","currentStyle","onStyleChange","Form","Control","as","size","className","onChange","e","target","map","style","key","LayerControls","settingName","newValue","this","newSettings","title","propTypes","Object","keys","display","float","propType","_onValueChange","bind","Component","Setting","Checkbox","Check","checked","Slider","htmlFor","Number","Notification","show","fade","icon","iconClassName","message","description","text","URL","window","open","location","replace","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Counter","counter","algorithms","navbar","state","algorithm","collapse","setState","db","firestore","increment","FieldValue","collection","doc","update","get","then","snapshot","docs","forEach","readCounter","bfs","incrementCounter","dfs","dks","gbf","astar","console","log","fixed","dark","expand","isWideEnough","isOpen","centre","options","placeholder","start","end","handleAlgo","Button","handleStart","variant","setInitialView","ListGroup","pill","nodesVisited","runTime","pathLength","distance","speed","ReactGA","initialize","pageview","pathname","search","App","processData","graph","require","nodesToDisplay","i","push","lon","lat","pathToDisplay","tripToDisplay","cost","clearInterval","interval","current","adjNodes","timer","Date","now","currentFrontier","nextFrontier","Map","nodes","length","pop","adj","animateNodes","next","has","set","stack","frontier","filter","includes","nodesVisted","dijkstra","FlatQueue","cost_so_far","pathCounter","Array","from","new_cost","w","heuristic","a","b","Math","abs","priority","recustructPath","backwards","timestamp","timestampCounter","distanceNodes","parseInt","reverse","haversine","reduce","toFixed","animatePath","radians","degrees","PI","lat1","lat2","Δφ","Δλ","sin","cos","atan2","sqrt","viewport","longitude","latitude","zoom","pitch","bearing","hover","x","y","hoveredObject","click","clickedOject","accu","_animationFrame","cancelAnimationFrame","loopLength","animationSpeed","loopTime","requestAnimationFrame","setInterval","concat","slice","shift","object","_updateLayerSettings","ref","transform","layers","_onHover","_onClick","initialViewState","controller","ContextProvider","MapContext","Provider","reuseMaps","mapStyle","mapboxApiAccessToken","_uiVersion","Boolean","hostname","match","initialState","rootReducer","action","newNodes","node","newFrontier","newPath","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fde44ca0.chunk.js","sourcesContent":["import { ScatterplotLayer } from \"deck.gl\";\nimport { TripsLayer } from \"@deck.gl/geo-layers\";\nimport { PolygonLayer, IconLayer, PathLayer } from \"@deck.gl/layers\";\nimport { AmbientLight, PointLight, LightingEffect } from \"@deck.gl/core\";\n\nconst URL =\n  \"https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/trips/buildings.json\";\n\n//const trips =\"https://raw.githubusercontent.com/uber-common/deck.gl-data/master/examples/trips/trips-v7.json\";\n\nconst START_COLOR = [0, 128, 255];\nconst END_COLOR = [255, 0, 128];\n\nconst ambientLight = new AmbientLight({\n  color: [255, 255, 255],\n  intensity: 1.0\n});\n\nconst pointLight = new PointLight({\n  color: [255, 255, 255],\n  intensity: 2.0,\n  position: [-74.05, 40.7, 8000]\n});\n\nconst lightingEffect = new LightingEffect({ ambientLight, pointLight });\n\nconst material = {\n  ambient: 0.1,\n  diffuse: 0.6,\n  shininess: 32,\n  specularColor: [60, 64, 70]\n};\n\nconst DEFAULT_THEME = {\n  buildingColor: [74, 80, 87],\n  trailColor0: [253, 128, 93],\n  trailColor1: [23, 184, 190],\n  material,\n  effects: [lightingEffect]\n};\nconst landCover = [\n  [\n    [-74.0, 40.7],\n    [-74.02, 40.7],\n    [-74.02, 40.72],\n    [-74.0, 40.72]\n  ]\n];\nconst ICON_MAPPING = {\n  marker: { x: 0, y: 0, width: 32, height: 32, mask: true }\n};\n\nexport function renderLayers(props) {\n  //Distructuring arguments\n  const {\n    data,\n    visiting,\n    startEnd,\n    path,\n    trip,\n    time,\n    trailLength,\n    onHover,\n    onClick,\n    settings,\n    buildings = URL,\n    theme = DEFAULT_THEME\n  } = props;\n\n  return [\n    settings.showScatterplot &&\n      new ScatterplotLayer({\n        id: \"scatterplot\",\n        //Format array [x,y,z]\n        getPosition: d => [d[1], d[2]],\n        getFillColor: [0, 128, 255],\n        getRadius: 8.5,\n        opacity: 1, //Put 0 for invisable\n        pickable: true,\n        radiusMinPixels: 0.25,\n        radiusMaxPixels: 10,\n        data,\n        time,\n        onHover,\n        onClick,\n        ...settings\n      }),\n\n    new ScatterplotLayer({\n      id: \"scatterplotVisiting\",\n      getPosition: d => [d[1], d[2]],\n      getFillColor: [253, 128, 93],\n      getRadius: 9,\n      opacity: 1, //Put 0 for invisable\n      radiusMinPixels: 0.25,\n      radiusMaxPixels: 10,\n      data: visiting,\n      ...settings\n    }),\n\n    new PolygonLayer({\n      id: \"ground\",\n      data: landCover,\n      getPolygon: f => f,\n      stroked: false,\n      getFillColor: [0, 0, 0, 0]\n    }),\n\n    new PolygonLayer({\n      id: \"buildings\",\n      data: buildings,\n      extruded: true,\n      wireframe: false,\n      opacity: 0.5,\n      getPolygon: f => f.polygon,\n      getElevation: f => f.height,\n      getFillColor: theme.buildingColor,\n      material: theme.material\n    }),\n    new PathLayer({\n      id: \"path-layer\",\n      data: path,\n      pickable: true,\n      widthMinPixels: 1,\n      getPath: d => d.path,\n      getColor: d => [253, 128, 93],\n      getWidth: d => 2\n    }),\n\n    new ScatterplotLayer({\n      id: \"scatterplotStartEnd\",\n      getPosition: d => [d[1], d[2]],\n      getFillColor: [255, 69, 0],\n      getRadius: 20,\n      opacity: 1, //Put 0 for invisable\n      radiusMinPixels: 0.25,\n      radiusMaxPixels: 10,\n      data: startEnd,\n      ...settings\n    }),\n    new TripsLayer({\n      id: \"trips\",\n      data: trip,\n      getPath: d => d.trip,\n      getTimestamps: d => d.timestamps,\n      getColor: [253, 128, 93],\n      opacity: 0.8,\n      widthMinPixels: 4,\n      rounded: true,\n      trailLength,\n      currentTime: time,\n\n      shadowEnabled: false\n    })\n\n    // new IconLayer({\n    //   id: \"icon-layer\",\n    //   data: [startXY, endXY],\n    //   pickable: true,\n    //   // iconAtlas and iconMapping are required\n    //   // getIcon: return a string\n    //   iconAtlas: \"./pin.png\",\n    //   iconMapping: ICON_MAPPING,\n    //   getIcon: d => \"marker\",\n\n    //   sizeScale: 15,\n    //   getPosition: d => [d[1], d[2]],\n    //   getSize: d => 24,\n    //   getColor: d => [255, 255, 255]\n    // })\n  ];\n}\n","export const tooltipStyle = {\n  position: \"absolute\",\n  padding: \"4px\",\n  background: \"rgba(0, 0, 0, 0.8)\",\n  color: \"#fff\",\n  maxWidth: \"300px\",\n  fontSize: \"10px\",\n  zIndex: 9,\n  pointerEvents: \"none\"\n};\n\nexport const layerControl = {\n  borderRadius: 3,\n  boxShadow: \"0 1px 2px rgba(0, 0, 0, 0.1)\",\n  fontFamily:\n    'ff-clan-web-pro, \"Helvetica Neue\", Helvetica, sans-serif !important',\n  fontSize: \"11px\",\n  lineHeight: 1.833,\n  width: 180,\n  position: \"absolute\",\n  top: \"115px\",\n  right: \"5px\",\n  padding: \"5px\",\n  zIndex: 100,\n  background: \"white\"\n};\nexport const countercss = {\n  color: \"#fff\",\n  opacity: 1,\n  fontWeight: 500,\n  fontSize: \"1rem\",\n  position: \"absolute\",\n  bottom: \"30px\",\n  left: \"45px\",\n  zIndex: 9998\n};\n\nexport const counterText = {\n  color: \"#F5F5F5\",\n  opacity: 1,\n  fontSize: \"0.6rem\",\n  position: \"absolute\",\n  bottom: \"20px\",\n  left: \"45px\",\n  zIndex: 9998\n};\n","import React, { Component } from \"react\";\nimport { layerControl } from \"./style\";\nimport { Form } from \"react-bootstrap\";\n\nexport const SCATTERPLOT_CONTROLS = {\n  showScatterplot: {\n    type: \"boolean\",\n    value: true\n  },\n  radiusScale: {\n    type: \"range\",\n    value: 0.6,\n    step: 2,\n    min: 10,\n    max: 10\n  }\n};\n\nconst MAPBOX_DEFAULT_MAPSTYLES = [\n  { label: \"Streets\", value: \"mapbox://styles/mapbox/streets-v10\" },\n  { label: \"Outdoors\", value: \"mapbox://styles/mapbox/outdoors-v10\" },\n  { label: \"Light\", value: \"mapbox://styles/mapbox/light-v10\" },\n  { label: \"Dark\", value: \"mapbox://styles/mapbox/dark-v10\" },\n  { label: \"Satellite\", value: \"mapbox://styles/mapbox/satellite-v9\" },\n  {\n    label: \"Navigation Preview Day V4\",\n    value: \"mapbox://styles/mapbox/navigation-preview-day-v4\"\n  },\n  {\n    label: \"Navitation Preview Night V4\",\n    value: \"mapbox://styles/mapbox/navigation-preview-night-v4\"\n  },\n  {\n    label: \"Navigation Guidance Day V4\",\n    value: \"mapbox://styles/mapbox/navigation-guidance-day-v4\"\n  },\n  {\n    label: \"Navigation Guidance Night V4\",\n    value: \"mapbox://styles/mapbox/navigation-guidance-night-v4\"\n  }\n];\n\nexport function MapStylePicker({ currentStyle, onStyleChange }) {\n  return (\n    <Form.Control\n      as=\"select\"\n      size=\"md\"\n      className=\"col-sm-2 sm\"\n      value={currentStyle}\n      onChange={e => onStyleChange(e.target.value)}\n    >\n      {MAPBOX_DEFAULT_MAPSTYLES.map(style => (\n        <option key={style.value} value={style.value}>\n          {style.label}\n        </option>\n      ))}\n    </Form.Control>\n  );\n}\n\nexport class LayerControls extends Component {\n  _onValueChange(settingName, newValue) {\n    const { settings } = this.props;\n    // Only update if we have a confirmed change\n    if (settings[settingName] !== newValue) {\n      // Create a new object so that shallow-equal detects a change\n      const newSettings = {\n        ...this.props.settings,\n        [settingName]: newValue\n      };\n\n      this.props.onChange(newSettings);\n    }\n  }\n\n  render() {\n    const { title, settings, propTypes = {} } = this.props;\n\n    return (\n      <div className=\"layer-controls\" style={layerControl}>\n        {title && <h4>{title}</h4>}\n        {Object.keys(settings).map(key => (\n          <div key={key}>\n            <div style={{ display: \"inline-block\", float: \"right\" }}>\n              {settings[key]}\n            </div>\n            <Setting\n              settingName={key}\n              value={settings[key]}\n              propType={propTypes[key]}\n              onChange={this._onValueChange.bind(this)}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst Setting = props => {\n  const { propType } = props;\n  if (propType && propType.type) {\n    switch (propType.type) {\n      case \"range\":\n        return <Slider {...props} />;\n\n      case \"boolean\":\n        return <Checkbox {...props} />;\n      default:\n        return <input {...props} />;\n    }\n  }\n};\n\nconst Checkbox = ({ settingName, value, onChange }) => {\n  return (\n    <Form>\n      <Form.Check\n        type=\"switch\"\n        id={settingName}\n        checked={value}\n        onChange={e => onChange(settingName, e.target.checked)}\n        label=\"Show Scatterplot\"\n      />\n    </Form>\n  );\n};\n\nconst Slider = ({ settingName, value, propType, onChange }) => {\n  const { max = 100 } = propType;\n\n  return (\n    <div className=\"Slider\">\n      <label htmlFor=\"customRange1\">Scatterplot Radius</label>\n      <input\n        type=\"range\"\n        className=\"custom-range\"\n        id=\"customRange1\"\n        min={0}\n        max={max}\n        step={max / 100}\n        value={value}\n        onChange={e => onChange(settingName, Number(e.target.value))}\n      />\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { MDBNotification } from \"mdbreact\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nexport class Notification extends Component {\n  render() {\n    return (\n      <MDBNotification\n        //autohide={5000}\n        show\n        fade\n        icon=\"location-arrow\"\n        iconClassName=\"text-primary\"\n        title={this.props.label}\n        message={this.props.description}\n        text=\"Click to learn more\"\n        onClick={() => {\n          if (this.props.URL) {\n            window.open(this.props.URL, \"_blank\") ||\n              window.location.replace(this.props.URL);\n          }\n        }}\n        style={{\n          position: \"fixed\",\n          fontSize: \"12.5px\",\n          width: \"30rem\",\n          bottom: \"10px\",\n          right: \"10px\",\n          zIndex: 9999\n        }}\n      />\n    );\n  }\n}\n","import firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCbjifHG6TIt-trtkCPWBw_Q6FMq2ZuE9w\",\r\n  authDomain: \"pathfinding-1.firebaseapp.com\",\r\n  databaseURL: \"https://pathfinding-1.firebaseio.com\",\r\n  projectId: \"pathfinding-1\",\r\n  storageBucket: \"pathfinding-1.appspot.com\",\r\n  messagingSenderId: \"134386886799\",\r\n  appId: \"1:134386886799:web:2be79cafe87129a0b7e8fa\",\r\n  measurementId: \"G-DYK0K7JL1X\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport { countercss, counterText } from \"./style.js\";\r\nconst Counter = props => {\r\n  return (\r\n    <div>\r\n      <div style={countercss}>{props.counter} paths found</div>\r\n      <div style={counterText}>with path-finding.com</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from \"react-bootstrap\";\nimport { MapStylePicker } from \"./controls\";\nimport { Notification } from \"./notification\";\nimport Select from \"react-select\";\nimport firebase from \"./firebase\";\nimport Counter from \"./counter.jsx\";\nimport {\n  MDBNavbar,\n  MDBNavbarNav,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBContainer\n} from \"mdbreact\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst algorithms = [\n  {\n    value: \"bfs\",\n    label: \"Bread-First Search\",\n    description: \"UNWEIGHTED and GUARANTEES the shortest path!\",\n    URL: \"https://en.wikipedia.org/wiki/Breadth-first_search\"\n  },\n  {\n    value: \"dfs\",\n    label: \"Depth-First Search\",\n    description: \"UNWEIGHTED and DOESN'T GUARANTEE the shortest path!\",\n    URL: \"https://en.wikipedia.org/wiki/Depth-first_search\"\n  },\n  {\n    value: \"dks\",\n    label: \"Dijkstra’s\",\n    description: \"WEIGHTED and GUARANTEES the shortest path!\",\n    URL: \"https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm\"\n  },\n  {\n    value: \"gbf\",\n    label: \"Greedy Best First Search\",\n    description:\n      \"Can be WEIGHTED and DOESN'T GUARANTEE the shortest path. A faster, more heuristic-heavy version of A*\",\n    URL: \"https://en.wikipedia.org/wiki/Best-first_search\"\n  },\n  {\n    value: \"astar\",\n    label: \"A* Algorithm\",\n    description:\n      \"WEIGHTED and GUARANTEES the shortest path. Probably, the best pathfinding algorithm; uses heuristics to guarantee the shortest path much faster than Dijkstra's Algorithm\",\n    URL: \"https://en.wikipedia.org/wiki/A*_search_algorithm\"\n  }\n];\n\nclass navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      algorithm: \"Algorithm\",\n      label: \"How does it work?\",\n      description:\n        \"Select a STARTING/DESTINATION point by clicking on the nodes ⮕ Select an ALGORITHM ⮕ Click START. Keep me open if you want to learn more about algorithms while using the site\",\n      collapse: false\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n  onClick() {\n    this.setState({\n      collapse: !this.state.collapse\n    });\n  }\n\n  handleAlgo(e) {\n    this.setState({\n      algorithm: e.value,\n      label: e.label,\n      description: e.description,\n      URL: e.URL\n    });\n  }\n\n  incrementCounter() {\n    //Increment counter\n    const db = firebase.firestore();\n    const increment = firebase.firestore.FieldValue.increment(1);\n\n    const counterRef = db.collection(\"counter\").doc(\"paths\");\n    counterRef.update({ counter: increment });\n  }\n\n  readCounter() {\n    //Read counter on load time\n    const db = firebase.firestore();\n    let counter;\n    db.collection(\"counter\")\n      .get()\n      .then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          counter = doc.data().counter;\n        });\n        this.setState({ counter });\n      });\n  }\n  componentDidMount() {\n    this.readCounter();\n  }\n  handleStart() {\n    switch (this.state.algorithm) {\n      case \"bfs\":\n        this.props.bfs();\n        this.incrementCounter(); //Total paths found all time\n        break;\n      case \"dfs\":\n        this.props.dfs();\n        this.incrementCounter();\n        break;\n      case \"dks\":\n        this.props.dks();\n        this.incrementCounter();\n        break;\n      case \"gbf\":\n        this.props.gbf();\n        this.incrementCounter();\n        break;\n      case \"astar\":\n        this.incrementCounter();\n        this.props.astar();\n        break;\n      default:\n        console.log(\"No algorithm selected!\");\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <Router>\n            <MDBNavbar\n              color=\"bg-primary\"\n              fixed=\"top\"\n              dark\n              expand=\"md\"\n              fixed=\"top\"\n              scrolling\n              transparent\n            >\n              <MDBContainer>\n                {/* <MDBNavbarBrand href=\"/\">\n                  <strong>Pathfinding visualiser</strong>\n                </MDBNavbarBrand> */}\n                {!this.state.isWideEnough && (\n                  <MDBNavbarToggler onClick={this.onClick} />\n                )}\n                <MDBCollapse isOpen={this.state.collapse} navbar>\n                  <MDBNavbarNav centre>\n                    <Select\n                      options={algorithms}\n                      className=\"col-sm-3 sm\"\n                      placeholder={this.props.start}\n                      size=\"sm\"\n                    />\n\n                    <Select\n                      options={algorithms}\n                      className=\"col-sm-3 sm\"\n                      placeholder={this.props.end}\n                    />\n\n                    <Select\n                      options={algorithms}\n                      className=\"col-sm-3 sm\"\n                      onChange={e => this.handleAlgo(e)}\n                      placeholder={this.state.algorithm}\n                    />\n                    <Button\n                      size=\"sm\"\n                      onClick={() => this.handleStart()} //()=> so that it doesn't get called as soon as mounted\n                      variant=\"primary\"\n                      className=\"mr-sm-2 font-weight-bold\"\n                    >\n                      START\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      onClick={() => this.props.setInitialView()}\n                      variant=\"danger\"\n                      className=\"mr-sm-2\"\n                    >\n                      CLEAR\n                    </Button>\n                    <MapStylePicker\n                      onStyleChange={this.props.onStyleChange}\n                      currentStyle={this.props.style}\n                    />\n                  </MDBNavbarNav>\n                </MDBCollapse>\n              </MDBContainer>\n            </MDBNavbar>\n          </Router>\n        </header>\n\n        <Notification\n          algorithm={this.state.algorithm}\n          label={this.state.label}\n          description={this.state.description}\n          URL={this.state.URL}\n        />\n        <Counter counter={this.state.counter} />\n      </div>\n    );\n  }\n}\n\nexport default navbar;\n","import React, { Component } from \"react\";\nimport {\n  MDBListGroup,\n  MDBListGroupItem,\n  MDBContainer,\n  MDBBadge\n} from \"mdbreact\";\n\nexport class ListGroup extends Component {\n  render() {\n    return (\n      <MDBContainer>\n        <MDBListGroup\n          style={{\n            width: 180,\n            fontSize: \"12px\",\n            position: \"absolute\",\n            top: \"5px\",\n            right: \"5px\",\n            lineHeight: 0.5\n          }}\n        >\n          <MDBListGroupItem\n            className=\"d-flex justify-content-between align-items-center p-1\"\n            color=\"secondary\"\n          >\n            Live nodes count:\n            <span> {this.props.data}</span>\n          </MDBListGroupItem>\n          <MDBListGroupItem className=\"d-flex   justify-content-between  align-items-center p-1 \">\n            Visited{\" \"}\n            <MDBBadge color=\"primary\" pill>\n              {this.props.nodesVisited}\n            </MDBBadge>{\" \"}\n            nodes in <MDBBadge color=\"danger\">{this.props.runTime}ms</MDBBadge>\n          </MDBListGroupItem>\n          <MDBListGroupItem className=\"d-flex justify-content-between align-items-center p-1\">\n            Path length:\n            <MDBBadge color=\"primary\" pill>\n              {this.props.pathLength}\n            </MDBBadge>\n          </MDBListGroupItem>\n          <MDBListGroupItem className=\"d-flex justify-content-between align-items-center p-1\">\n            Distance:\n            <MDBBadge color=\"primary\" pill>\n              {this.props.distance} Km\n            </MDBBadge>\n          </MDBListGroupItem>\n          <MDBListGroupItem className=\"d-flex justify-content-between align-items-center p-1\">\n            Average speed:\n            <MDBBadge color=\"primary\" pill>\n              {this.props.speed} Km/h\n            </MDBBadge>\n          </MDBListGroupItem>\n        </MDBListGroup>\n      </MDBContainer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  _MapContext as MapContext,\n  NavigationControl,\n  StaticMap\n} from \"react-map-gl\";\nimport DeckGL from \"deck.gl\";\nimport { renderLayers } from \"./components/deckgl-layers\";\nimport Navbar from \"./components/navbar\";\nimport { ListGroup } from \"./components/list-group\";\nimport { LayerControls, SCATTERPLOT_CONTROLS } from \"./components/controls\";\nimport { tooltipStyle } from \"./components/style\";\nimport FlatQueue from \"flatqueue\";\nimport ReactGA from \"react-ga\"; //Website traffic info\nReactGA.initialize(\"UA-160781302-1\");\nReactGA.pageview(window.location.pathname + window.location.search);\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewport: {\n        longitude: -74,\n        latitude: 40.711,\n        zoom: 13.9,\n        pitch: 55,\n        bearing: 45\n      },\n      hover: {\n        x: 0,\n        y: 0,\n        hoveredObject: null\n      },\n      graph: null,\n      timestampCounter: null,\n      pathLength: 0,\n      trailLength: 200, //Can't be null\n      click: { clickedOject: null },\n      start: \"Start\", //So that they show as placeholder\n      end: \"Destination\",\n      nodesToDisplay: [],\n      nodesVisited: 0, //Frontier length\n      time: 0,\n      cost: 0,\n      settings: Object.keys(SCATTERPLOT_CONTROLS).reduce(\n        (accu, key) => ({\n          ...accu,\n          [key]: SCATTERPLOT_CONTROLS[key].value\n        }),\n        {}\n      ),\n      style: \"mapbox://styles/mapbox/dark-v10\"\n    };\n  }\n\n  componentDidMount() {\n    this.processData();\n  }\n\n  componentWillUnmount() {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n    }\n  }\n  animatePath() {\n    const {\n      loopLength = this.state.timestampCounter, // unit corresponds to the timestamp in source data\n      animationSpeed = loopLength / 2, // unit time per second\n      trailLength = loopLength\n    } = this.props;\n    this.setState({ trailLength });\n    const timestamp = Date.now() / 1000;\n    const loopTime = loopLength / animationSpeed;\n\n    this.setState({\n      time: ((timestamp % loopTime) / loopTime) * loopLength\n    });\n    this._animationFrame = window.requestAnimationFrame(\n      this.animatePath.bind(this)\n    );\n  }\n\n  processData = () => {\n    const data = require(\"./data/nodes.json\");\n    const graph = data[0];\n    this.setState(\n      { graph },\n      this.setInitialView //Works as await function\n    );\n  };\n\n  setInitialView = () => {\n    let nodesToDisplay = [];\n    const graph = this.state.graph;\n\n    for (let i in graph) {\n      nodesToDisplay.push([i, graph[i].lon, graph[i].lat]);\n    }\n    this.setState({\n      nodesToDisplay,\n      pathToDisplay: null, //Reset path\n      tripToDisplay: null, //Reset trip animation\n      visiting: null, //Reset Frontier\n      startEnd: null, //Reset start/end\n      start: \"Start\", //So that they show as placeholder\n      end: \"Destination\",\n      cost: 0,\n      speed: 0,\n      pathLength: 0,\n      runTime: 0\n    });\n    clearInterval(this.state.interval); //Stop animation\n  };\n  //////////////////////////////////\n  bfs = () => {\n    const graph = this.state.graph;\n    const timer = Date.now();\n    let currentFrontier = [this.state.start];\n    let nextFrontier = [];\n\n    let path = new Map();\n    //To reconstruct the path\n    let current, adjNodes;\n    let nodes = [];\n\n    while (currentFrontier.length > 0 || nextFrontier.length > 0) {\n      if (currentFrontier.length === 0) {\n        //Swap\n        [currentFrontier, nextFrontier] = [nextFrontier, currentFrontier];\n      }\n\n      current = currentFrontier.pop();\n      adjNodes = graph[current].adj;\n\n      nodes.push([current, graph[current].lon, graph[current].lat]);\n\n      if (current === this.state.end) {\n        let runTime = Date.now() - timer;\n        this.setState({ nodesVisited: nodes.length, runTime });\n        this.animateNodes(nodes, path);\n\n        break;\n      }\n\n      for (let next of adjNodes) {\n        if (!path.has(next)) {\n          nextFrontier.push(next);\n          path.set(next, current);\n        }\n      }\n    }\n    if (!currentFrontier.length && !nextFrontier.length) {\n      this.animateNodes(nodes);\n\n      console.log(\n        `Path not found, ${current} possible dead end or all the adjacent nodes have already been visited`\n      );\n    }\n  };\n\n  dfs = () => {\n    const graph = this.state.graph;\n    const timer = Date.now();\n    let stack = [this.state.start];\n    let frontier = [];\n    let path = new Map();\n    let current;\n    let nodes = [];\n    while (stack.length) {\n      current = stack.pop();\n      frontier.push(current);\n\n      //Display node\n      nodes.push([current, graph[current].lon, graph[current].lat]);\n\n      if (current === this.state.end) {\n        let runTime = Date.now() - timer;\n        this.setState({ nodesVisited: nodes.length, runTime });\n        this.animateNodes(nodes, path);\n        console.log(`${nodes.length} nodes visted in ${Date.now() - timer} ms`);\n        break;\n      }\n\n      graph[current].adj\n        .filter(next => !frontier.includes(next))\n        .forEach(next => {\n          stack.push(next);\n          path.set(Number(next), Number(current));\n        });\n    }\n    if (!stack.length) {\n      this.animateNodes(nodes);\n      let runTime = Date.now() - timer;\n      this.setState({ nodesVisted: nodes.length, runTime });\n      console.log(\n        `Path not found, ${current} possible dead end or all the adjacent nodes have already been visited`\n      );\n    }\n  };\n\n  dijkstra = () => {\n    const graph = this.state.graph;\n    const timer = Date.now();\n    const frontier = new FlatQueue();\n    frontier.push(this.state.start, 0);\n    let path = new Map();\n    let cost_so_far = new Map();\n    cost_so_far.set(this.state.start, 0);\n\n    let current, adjNodes;\n    let nodes = [];\n    let pathCounter = 0;\n    while (frontier.length > 0) {\n      current = frontier.pop(); //remove smallest item\n      adjNodes = graph[current].adj;\n\n      nodes.push([current, graph[current].lon, graph[current].lat]);\n\n      if (current === this.state.end) {\n        let runTime = Date.now() - timer;\n        let cost = Array.from(cost_so_far)[cost_so_far.size - 1][1];\n        this.setState({ cost, nodesVisited: nodes.length, runTime });\n\n        this.animateNodes(nodes, path);\n        console.log(\n          `%cAnalysed ${pathCounter} different paths, the best one costs ${cost}.`,\n          \"color: #fff; background-color:#b32400; border-radius: 5px; padding: 2px\"\n        );\n        break;\n      }\n\n      let i = 0;\n      for (let next of adjNodes) {\n        let new_cost = cost_so_far.get(current) + graph[current].w[i];\n\n        if (!cost_so_far.has(next) || new_cost < cost_so_far.get(next)) {\n          if (new_cost < cost_so_far.get(next)) pathCounter++;\n\n          cost_so_far.set(next, new_cost);\n          // let priority = new_cost;\n          frontier.push(next, new_cost);\n          path.set(next, current);\n        }\n        i++;\n      }\n    }\n    if (!frontier.length) {\n      this.animateNodes(nodes);\n      console.log(`${nodes.length} nodes visted in ${Date.now() - timer} ms`);\n      console.log(\n        `Path not found, ${current} possible dead end or all the adjacent nodes have already been visited`\n      );\n    }\n  };\n  heuristic = (a, b) => {\n    //Manhattan distance\n    const graph = this.state.graph;\n\n    return (\n      Math.abs(graph[a].lon - graph[b].lon) +\n      Math.abs(graph[a].lat - graph[b].lat)\n    );\n  };\n\n  gbf = () => {\n    //Greedy Best First Search\n    const graph = this.state.graph;\n    const timer = Date.now();\n    const frontier = new FlatQueue();\n    frontier.push(this.state.start, 0);\n    let path = new Map();\n\n    let current, adjNodes, priority;\n    let nodes = [];\n\n    while (frontier.length > 0) {\n      current = frontier.pop(); //remove smallest item\n      adjNodes = graph[current].adj;\n\n      nodes.push([current, graph[current].lon, graph[current].lat]);\n\n      if (current === this.state.end) {\n        let runTime = Date.now() - timer;\n        this.setState({ nodesVisited: nodes.length, runTime });\n        this.animateNodes(nodes, path);\n        break;\n      }\n\n      for (let next of adjNodes) {\n        if (!path.has(next)) {\n          priority = this.heuristic(this.state.end, next); //Destination, currrent node\n          frontier.push(next, priority);\n          path.set(next, current);\n        }\n      }\n    }\n    if (!frontier.length) {\n      this.animateNodes(nodes);\n      console.log(`${nodes.length} nodes visted in ${Date.now() - timer} ms`);\n      console.log(\n        `Path not found, ${current} possible dead end or all the adjacent nodes have already been visited`\n      );\n    }\n  };\n\n  astar = () => {\n    const graph = this.state.graph;\n    const timer = Date.now();\n    const frontier = new FlatQueue();\n    frontier.push(this.state.start, 0);\n    let path = new Map();\n    let cost_so_far = new Map();\n    cost_so_far.set(this.state.start, 0);\n\n    let current, adjNodes, priority;\n    let nodes = [];\n    let pathCounter = 0;\n    while (frontier.length > 0) {\n      current = frontier.pop(); //remove smallest item\n      adjNodes = graph[current].adj;\n\n      nodes.push([current, graph[current].lon, graph[current].lat]);\n\n      if (current === this.state.end) {\n        let runTime = Date.now() - timer;\n\n        let cost = Array.from(cost_so_far)[cost_so_far.size - 1][1];\n        this.setState({ cost, nodesVisited: nodes.length, runTime });\n        console.log(\n          `%cAnalysed ${pathCounter} different paths, the best one costs ${cost}.`,\n          \"color: #fff; background-color:#b32400; border-radius: 5px; padding: 2px\"\n        );\n        this.animateNodes(nodes, path);\n        console.log(`${nodes.length} nodes visted in ${Date.now() - timer} ms`);\n        break;\n      }\n\n      let i = 0;\n      for (let next of adjNodes) {\n        let new_cost = cost_so_far.get(current) + graph[current].w[i];\n\n        if (!cost_so_far.has(next) || new_cost < cost_so_far.get(next)) {\n          if (new_cost < cost_so_far.get(next)) pathCounter++; //How many different paths analysed\n\n          cost_so_far.set(next, new_cost);\n          priority = new_cost + this.heuristic(this.state.end, next);\n          frontier.push(next, priority);\n          path.set(next, current);\n        }\n        i++;\n      }\n    }\n    if (!frontier.length) {\n      this.animateNodes(nodes);\n      console.log(`${nodes.length} nodes visted in ${Date.now() - timer} ms`);\n      console.log(\n        `Path not found, ${current} possible dead end or all the adjacent nodes have already been visited`\n      );\n    }\n  };\n  recustructPath = path => {\n    let graph = this.state.graph;\n    let current = this.state.end;\n    let backwards = [];\n    let nodes = [];\n    let trip = [];\n    let timestamp = [];\n    let timestampCounter = 1;\n    let distanceNodes = [];\n\n    while (current !== this.state.start) {\n      backwards.push(current);\n      current = parseInt(path.get(current));\n    }\n    backwards.push(this.state.start);\n    backwards.reverse();\n\n    for (let i of backwards) {\n      timestampCounter++;\n      nodes.push([graph[i].lon, graph[i].lat]); //PathLayer\n      trip.push([graph[i].lon, graph[i].lat, 10]); //x, y, z (path elevation) //TripsLayer\n      timestamp.push(timestampCounter);\n    }\n    this.setState({ timestampCounter });\n    const pathToDisplay = [{ path: nodes }];\n    const tripToDisplay = [\n      {\n        trip,\n        timestamps: timestamp\n      }\n    ];\n    this.setState({\n      pathToDisplay,\n      tripToDisplay\n    });\n    //Calculate total path distance\n    for (let i = 0; i < backwards.length - 1; i++) {\n      distanceNodes.push(\n        Number(this.haversine(backwards[i], backwards[i + 1]))\n      );\n    }\n    let distance = distanceNodes.reduce((a, b) => a + b, 0).toFixed(2);\n    let speed = (this.state.cost / backwards.length).toFixed(2);\n\n    this.setState({ distance, pathLength: backwards.length, speed });\n    this.animatePath();\n  };\n\n  haversine = (a, b) => {\n    //https://www.movable-type.co.uk/scripts/latlong.html\n    Math.radians = function(degrees) {\n      return (degrees * Math.PI) / 180;\n    };\n\n    const graph = this.state.graph;\n    const R = 6371; // Radius of the earth in km\n    const lat1 = Math.radians(graph[a].lat);\n    const lat2 = Math.radians(graph[b].lat);\n    const Δφ = lat2 - lat1;\n    const Δλ = Math.radians(graph[b].lon - graph[a].lon);\n\n    let distance =\n      Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\n      Math.cos(lat1) * Math.cos(lat2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    let c = 2 * Math.atan2(Math.sqrt(distance), Math.sqrt(1 - distance));\n\n    return R * c; //Distance in km\n  };\n\n  animateNodes(nodes, path = null, i = 1) {\n    // let connected = []; //Retrive connected graph\n    // nodes.forEach(e => connected.push(String(e[0])));\n    // console.log(connected);\n    let visiting = [];\n    this.setState({\n      nodesToDisplay: nodes[0],\n      startEnd: [nodes[0], nodes[nodes.length - 1]]\n    }); //Avoid page refresh\n\n    this.state.interval = setInterval(() => {\n      this.setState({\n        nodesToDisplay: this.state.nodesToDisplay.concat([nodes[i]]),\n        visiting: this.state.nodesToDisplay.slice(-25)\n      });\n\n      if ((visiting.length = 25)) {\n        visiting.shift();\n      }\n      i++;\n      if (i === nodes.length) {\n        clearInterval(this.state.interval);\n        this.setState({ visiting: null }); //Reset current visiting animation\n        if (nodes[nodes.length - 1][0] === this.state.end) {\n          //If end node found\n\n          this.recustructPath(path); //Set visited nodes sequence\n        }\n      }\n    }, 10);\n  }\n\n  ////////////////////////////////////////\n  _onHover({ x, y, object }) {\n    const label = `Node ${object}`;\n\n    this.setState({ hover: { x, y, hoveredObject: object, label } });\n  }\n  _onClick({ object }) {\n    if (this.state.start && this.state.end) {\n      this.setState({ start: null, end: null });\n    }\n\n    this.state.start\n      ? this.setState({ end: parseInt(object[0]) })\n      : this.setState({ start: parseInt(object[0]) });\n\n    //Start and End can't be the same\n    if (this.state.start === this.state.end) {\n      this.setState({ start: null, end: null });\n    }\n  }\n\n  onStyleChange = style => {\n    this.setState({ style });\n  };\n\n  _updateLayerSettings(settings) {\n    this.setState({ settings });\n  }\n  render() {\n    const data = this.state.nodesToDisplay;\n    const path = this.state.pathToDisplay;\n    const { viewport } = this.state;\n    if (data.length === 0) {\n      return null;\n    }\n    const { hover, settings } = this.state;\n\n    return (\n      <div>\n        <LayerControls\n          settings={this.state.settings}\n          propTypes={SCATTERPLOT_CONTROLS}\n          onChange={settings => this._updateLayerSettings(settings)}\n        />\n\n        <Navbar\n          ref=\"child\"\n          bfs={this.bfs}\n          dfs={this.dfs}\n          dks={this.dijkstra}\n          gbf={this.gbf}\n          astar={this.astar}\n          setInitialView={this.setInitialView}\n          onStyleChange={this.onStyleChange}\n          style={this.state.style}\n          start={this.state.start}\n          end={this.state.end}\n        />\n\n        {hover.hoveredObject && (\n          <div\n            style={{\n              ...tooltipStyle,\n              transform: `translate(${hover.x}px, ${hover.y}px)`\n            }}\n          >\n            <div>{hover.label}</div>\n          </div>\n        )}\n        <DeckGL\n          layers={renderLayers({\n            trailLength: this.state.trailLength,\n            visiting: this.state.visiting,\n            startEnd: this.state.startEnd,\n            data,\n            path: path,\n            trip: this.state.tripToDisplay,\n            time: this.state.time,\n            onHover: hover => this._onHover(hover),\n            onClick: click => this._onClick(click),\n            settings: this.state.settings\n          })}\n          initialViewState={viewport}\n          controller //Allows the user to move the map around\n          ContextProvider={MapContext.Provider}\n        >\n          <StaticMap // minimum version of reat-map-g\n            reuseMaps\n            mapStyle={this.state.style}\n            mapboxApiAccessToken={\n              //   \"pk.eyJ1IjoiZGlub2pzIiwiYSI6ImNrMXIybWIzZTAwdXozbnBrZzlnOWNidzkifQ.Zs9R8K81ZSvVVizvzAXmfg\"\n              \"pk.eyJ1IjoidWJlcmRhdGEiLCJhIjoiY2pudzRtaWloMDAzcTN2bzN1aXdxZHB5bSJ9.2bkj3IiRC8wj3jLThvDGdA\"\n            }\n          />\n          <div className=\"mapboxgl-ctrl-bottom-left\">\n            <NavigationControl\n              ref={ref => {\n                if (ref != null) {\n                  ref._uiVersion = 2;\n                }\n              }} //https://github.com/uber/deck.gl/issues/4383\n              // onViewportChange={viewport => this.setState({ viewport })}\n            />\n          </div>\n        </DeckGL>\n        <ListGroup\n          ref=\"child\"\n          data={data.length}\n          pathLength={this.state.pathLength}\n          distance={this.state.distance}\n          cost={this.state.cost}\n          speed={this.state.speed}\n          nodesVisited={this.state.nodesVisited}\n          runTime={this.state.runTime}\n        />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  hover: {\n    x: 0,\n    y: 0,\n    hoveredObject: null\n  },\n  click: { clickedOject: null },\n  start: 5173488749,\n  end: 6330518860,\n  nodes: [],\n  path: new Map(),\n  frontier: [],\n  style: \"mapbox://styles/mapbox/dark-v10\"\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_NODES\":\n      let newNodes = state.node;\n      return {\n        ...state,\n        nodes: newNodes\n      };\n    case \"SET_FRONTIER\":\n      let newFrontier = state.frontier;\n      return {\n        ...state,\n        nodes: newFrontier\n      };\n    case \"SET_PATH\":\n      let newPath = state.path;\n      return {\n        ...state,\n        path: newPath\n      };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\"; //Component that will wrap the root component, passs Store to that provider so it can be used in the app\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst store = createStore(rootReducer);\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}